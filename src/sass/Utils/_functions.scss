@mixin css3($property, $value) {
	@each $prefix in -webkit-, -moz-, -ms-, -o-, '' {
		#{$prefix}#{$property}: $value;
	}
}

@mixin breakpoint($point) {
	@if $point == large {
			@media (min-width: 64.375em) { @content; }
		}
		@else if $point == medium {
			@media (min-width: 50em) { @content; }
		}
		@else if $point == small {
			@media (min-width: 37.5em) { @content; }
	}
}

@mixin image-2x($image, $width, $height) {
	@media (min--moz-device-pixel-ratio: 1.3),
		(-o-min-device-pixel-ratio: 2.6/2),
		(-webkit-min-device-pixel-ratio: 1.3),
		(min-device-pixel-ratio: 1.3),
		(min-resolution: 1.3dppx) {
		/* on retina, use image that's scaled by 2 */
		background-image: url($image);
		background-size: $width $height;
	}
}

@function black($opacity){
		@return rgba(0,0,0,$opacity)
}

@function white($opacity){
	@return rgba(255,255,255,$opacity)
}

@mixin box-emboss($opacity, $opacity2){
	box-shadow:white($opacity) 0 1px 0, inset black($opacity2) 0 1px 0;
}

@mixin opacity($opacity) {
	opacity: $opacity;
	$opacity-ie: $opacity * 100;
	filter: alpha(opacity=$opacity-ie); //IE8
}

@mixin abs-pos ($top: auto, $right: auto, $bottom: auto, $left: auto) {
	top: $top;
	right: $right;
	bottom: $bottom;
	left: $left;
	position: absolute;
}

@mixin line-height($heightValue: 12 ){
	line-height: $heightValue + px; //fallback for old browsers
	line-height: (0.125 * $heightValue) + rem;
}

@mixin animated-caption($font-color, $bg-color, $bg-opacity, $padding, $transition-speed) {
	display:inline-block;
	position:relative;
	overflow:hidden;
	& img
	{
	display:block;
	width:100%;
	height:auto;
	}
	& span.outer
	{
	display:block;
	width:100%;
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
	padding:$padding;
	color:$font-color;
	position:absolute;
	bottom:-100px;
	-webkit-transition: bottom $transition-speed ease;
	-moz-transition: bottom $transition-speed ease;
	-o-transition: bottom $transition-speed ease;
	-ms-transition: bottom $transition-speed ease;
	transition: bottom $transition-speed ease;
	& span.inner
	{
	margin:0px;
	position:relative;
	}
	&:before
	{
	content: " ";
	display:block;
	position:absolute;
	z-index:0;
	left:0px;
	top:0px;
	width:100%;
	height:100%;
	background:$bg-color;
	filter: alpha(opactiy=($bg-opacity * 100));
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=#{$bg-opacity * 100})";
	-moz-opacity: $bg-opacity;
	-khtml-opacity: $bg-opacity;
	opacity: $bg-opacity;
	}
	}
	&:hover span.outer
	{
	bottom:0px;
	}
}

